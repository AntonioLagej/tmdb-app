{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.ts","components/Header/index.tsx","components/Thumb/Thumb.styles.js","components/Thumb/index.tsx","config.ts","components/Spinner/index.tsx","components/Spinner/Spinner.styles.ts","API.ts","helpers.ts","components/HeroImage/HeroImage.styles.ts","components/HeroImage/index.tsx","components/Button/Button.styles.ts","components/Button/index.tsx","images/no_image.jpg","components/Grid/Grid.styles.ts","components/Grid/index.tsx","images/search-icon.svg","components/SearchBar/SearchBar.styles.ts","components/SearchBar/index.tsx","components/Home.tsx","components/hooks/useHomeFetch.ts","GlobalStyle.ts","components/BreadCrumb/BreadCrumb.styles.ts","components/BreadCrumb/index.tsx","components/Actor/Actor.styles.ts","components/Actor/index.tsx","components/MovieInfo/MovieInfo.styles.ts","components/MovieInfo/index.tsx","components/MovieInfoBar/MovieInfoBar.styles.ts","components/MovieInfoBar/index.tsx","components/Movie.tsx","components/hooks/useMovieFetch.ts","components/NotFound.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","Image","Thumb","image","movieId","clickable","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","Spinner","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","JSON","parse","Text","HeroImage","title","text","button","Button","callback","type","onClick","Grid","header","children","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","placeholder","value","onChange","e","currentTarget","Home","initialState","results","total_pages","total_results","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","alert","setItem","stringify","useHomeFetch","console","log","backdrop_path","overview","map","movie","poster_path","noImage","id","GlobalStyle","createGlobalStyle","BreadCrumb","movieTitle","Actor","name","character","imageurl","backdrop","MovieInfo","NoImage","className","vote_average","directors","length","director","credit_id","MovieInfoBar","budget","revenue","Movie","useParams","credits","crew","filter","member","job","actors","cast","toString","useMovieFetch","Number","runtime","actor","profile_path","NotFound","App","basename","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51454452.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.bb8aa703.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\nbackground: var(--darkGrey);\r\npadding: 0 20px;\r\n\r\n`;\r\n\r\nexport const Content =styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\nmax-width: var(--maxWidth);\r\npadding: 0 20px;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n\r\nwidth: 100px;\r\n@media screen and (max-width:500px){\r\n    width: 70px;\r\n}\r\n`;\r\n\r\nexport const TMDBLogoImg =styled.img`\r\nwidth: 100px;\r\n@media screen and (max-width:500px){\r\n    width: 80px;\r\n}\r\n\r\n`;","import react from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport RMDBLogo from '../../images/react-movie-logo.svg'\r\nimport  TMDBLogo  from \"../../images/tmdb_logo.svg\";\r\n\r\nimport { Wrapper,Content,LogoImg,TMDBLogoImg } from \"./Header.styles\";\r\n\r\nconst Header:React.FC=()=>(\r\n    <Wrapper>\r\n<Content>\r\n   <Link to='/'> <LogoImg src={RMDBLogo} alt=\"rmdb-logo\"/>   </Link>\r\n        <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\"/>\r\n\r\n\r\n</Content>\r\n\r\n    </Wrapper>\r\n);\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 720px;\r\n  transition: all 0.3s;\r\n\r\n  border-radius: 20px;\r\n  animation: animateThumb 0.5s;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  @keyframes animateThumb {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import react from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Image } from \"./Thumb.styles\";\r\ntype Props={\r\nimage:string;\r\nmovieId?:number;\r\nclickable:boolean;\r\n\r\n}\r\nconst Thumb:react.FC<Props> =({image,movieId,clickable})=>(\r\n\r\n<div>\r\n    {clickable ?(\r\n<Link to ={`/${movieId}`}> \r\n\r\n<Image src={image} alt='movie-image'/>\r\n\r\n</Link>\r\n\r\n    ):\r\n    <Image src={image} alt='movie-image'/>}\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n);\r\n\r\nexport default Thumb;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL:string = 'https://api.themoviedb.org/3/';\nconst API_KEY:string|undefined = \"d27ba532bec97a1cc5c937d829038a0f\";\n\nconst SEARCH_BASE_URL:string = `${API_URL}search/movie?api_key=${API_KEY}&language=pt-BR&query=`;\nconst POPULAR_BASE_URL:string = `${API_URL}movie/popular?api_key=${API_KEY}&language=pt-BR`;\n\n\nconst IMAGE_BASE_URL:string = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE:string = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE:string = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n};\n","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;","import styled from 'styled-components';\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid var(--lightGrey);\r\n  border-top: 5px solid var(--medGrey);\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","\nimport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nexport type Movie={\n  backdrop_path:string;\n  id:number;\n  original_title:string;\n  title:string;\n  vote_average:number;\n  popularity:number;\n  overview:string;\n  poster_path:string;\n  vote_count:number;\n  budget:number;\n  runtime:number;\n  revenue:number;\n}\n\nexport type Movies={\n  page:number;\n  results:Movie[];\n  total_pages:number;\n  total_results:number;\n\n}\nexport type Cast ={\ncharacter:string;\ncredit_id:string;\nname:string;\nprofile_path:string\n\n}\n\nexport type Crew ={\n  job:string;\n  credit_id:string;\n  name:string;\n  \n  }\nexport type Credits={\nid:number;\ncast:Cast[];\ncrew: Crew[];\n\n}\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm:string, page:number) :Promise<Movies> => {\n    const endpoint:string = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async (movieId:number):Promise<Movie> => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=pt-BR`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async  (movieId:number):Promise<Credits> => {\n    const creditsEndpoint :string= `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=pt-BR`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  \n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time:number ):string=> {\n  const hours:number = Math.floor(time / 60);\n  const mins:number = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money:number):string => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState= (stateName:string)=>{\nconst sessionState = sessionStorage.getItem(stateName);\nreturn sessionState&& JSON.parse(sessionState);\n\n}","import styled from 'styled-components';\r\ntype Props={\r\n  image:string;\r\n  \r\n  \r\n  }\r\nexport const Wrapper = styled.div<Props>`\r\n  background: linear-gradient(\r\n      to bottom,\r\n      rgba(0, 0, 0, 0) 41%,\r\n      rgba(0, 0, 0, 0.65) 100%\r\n    ),\r\n    url(${({ image }) => image}), var(--darkGrey);\r\n  background-size: 100%, cover;\r\n  background-position: center;\r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroImage 1s;\r\n\r\n  @keyframes animateHeroImage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  bottom: 40px;\r\n  margin-right: 20px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n\r\n  p {\r\n    font-size: var(--fontMed);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 720px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import  React from \"react\";\r\n\r\nimport { Wrapper,Content,Text } from \"./HeroImage.styles\";\r\n\r\n\r\ntype Props={\r\n    image:string;\r\n    title:string;\r\n    text:string;\r\n    \r\n    }\r\nconst HeroImage:React.FC<Props> = \r\n    ({image,title,text})=>(\r\n\r\n\r\n    <Wrapper image={image}>\r\n    <Content>\r\n<Text>\r\n    <h1>\r\n        {title}\r\n    </h1>\r\n    <p> {text}</p>\r\n</Text>\r\n    </Content>\r\n</Wrapper>\r\n\r\n);\r\nexport default HeroImage;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\ndisplay: block;\r\n\r\nbackground:var(--darkGrey);\r\nwidth: 25%;\r\nheight: 10%;\r\nmin-width: 200px;\r\nborder-radius: 30px;\r\ncolor: var(--white);\r\nborder:0;\r\nfont-size: var(--fontBig);\r\nmargin: 20px auto;\r\ntransition: all 0.3s;\r\noutline: none;\r\ncursor: pointer;\r\n\r\n\r\n:hover{\r\n    opacity: 0.8;\r\n}\r\n`","import {Wrapper} from './Button.styles'\r\n\r\nimport react from 'react'\r\n\r\n\r\ntype Props={\r\ntext:string;\r\ncallback:()=>void;\r\n}\r\nconst Button:React.FC<Props>=({text,callback})=>(\r\n\r\n    <Wrapper type='button' onClick={callback}>\r\n\r\n        {text}\r\n    </Wrapper>\r\n);\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper =styled.div`\r\nmax-width: var(--maxWidth);\r\nmargin:0 auto;\r\npadding:0 20px;\r\n\r\nh1{\r\n    color:var(--medGrey);\r\n\r\n@media screen and (maxWidth:768px){\r\n    font-size: var(--fontBig);\r\n}    \r\n}\r\n\r\n\r\n`\r\nexport const Content = styled.div`\r\n\r\ndisplay: grid;\r\ngrid-template-columns: repeat(auto-fill,minmax(200px,1fr));\r\ngrid-gap: 1rem;\r\n`","import { type } from \"os\";\r\n\r\n\r\nimport { Wrapper,Content } from \"./Grid.styles\";\r\n\r\ntype Props={\r\nheader:string\r\n}\r\nconst Grid:React.FC<Props>=({header,children}) =>(\r\n\r\n\r\n<Wrapper>\r\n<h1>{header}</h1>\r\n<Content>{children}</Content>\r\n</Wrapper>\r\n\r\n\r\n);\r\nexport default Grid;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper =styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nheight: 100px;\r\nbackground: var(--darkGrey);\r\npadding:0 20px ;\r\n\r\n`\r\n\r\nexport const Content=styled.div`\r\nposition: relative;\r\nmax-width: var(--maxWidth);\r\nwidth: 100%;\r\nheight: 55px;\r\nbackground: var(--medGrey);\r\nmargin:0 auto;\r\nborder-radius: 40px;\r\ncolor: var(--white);\r\nimg{\r\n    position: absolute;\r\n    left: 15px;\r\n    top:14px;\r\n    width: 30px;\r\n}\r\ninput{\r\n    font-size: 28px;\r\n    position: absolute;\r\n    left: 0;\r\n    margin:8px 0;\r\n    padding: 0 0 0 60px;\r\n    border:0px;\r\n    width: 95%;\r\n    background:transparent;\r\n    height: 40px;\r\n    color: var(--white);\r\n    :focus{\r\noutline: none;\r\n    }\r\n}\r\n\r\n`","import { type } from \"os\";\r\nimport React from \"react\";\r\nimport react,{useState,useRef,useEffect} from \"react\";\r\n\r\nimport searchIcon from '../../images/search-icon.svg'\r\n\r\nimport { Wrapper,Content } from \"./SearchBar.styles\";\r\ntype Props={\r\n    setSearchTerm:React.Dispatch<React.SetStateAction<string>>;\r\n\r\n}\r\nconst SearchBar:React.FC<Props> =({setSearchTerm}) =>{\r\nconst [state,setState] = useState(\"\");\r\nconst initial = useRef(true);\r\n\r\nuseEffect(()=>{\r\n    if(initial.current){\r\n        initial.current=false;\r\n        return;\r\n    }\r\nconst timer=setTimeout(() => {\r\n    setSearchTerm(state)\r\n}, 500);\r\nreturn()=>clearTimeout(timer);\r\n    \r\n},[setSearchTerm,state])\r\nreturn(\r\n<Wrapper>\r\n<Content>\r\n<img src={searchIcon}/>\r\n<input\r\n  placeholder='Procurar filmes'\r\n   type='text'\r\n   value={state}\r\n   onChange={e=> setState(e.currentTarget.value)}\r\n\r\n ></input>\r\n</Content>\r\n\r\n</Wrapper>\r\n\r\n\r\n);\r\n\r\n}\r\nexport default SearchBar;","import React from \"react\";\r\n\r\nimport Thumb from './Thumb'\r\nimport {POSTER_SIZE,BACKDROP_SIZE,IMAGE_BASE_URL} from '../config'\r\nimport Spinner from \"./Spinner\";\r\nimport { useHomeFetch } from \"./hooks/useHomeFetch\";\r\n\r\nimport HeroImage from \"./HeroImage\";\r\nimport Button from \"./Button\";\r\nimport noImage from '../images/no_image.jpg'\r\nimport Grid from './Grid'\r\nimport SearchBar from \"./SearchBar\";\r\nconst Home:React.FC=()=>{\r\n    const {state,loading,error,searchTerm,setSearchTerm,setIsLoadingMore} = useHomeFetch();\r\n   console.log(state);\r\nif(error){\r\n    return<div>Alguma coisa deu errado</div>\r\n}else\r\n    return (\r\n    \r\n<div>\r\n     {!searchTerm&&state.results[0]?\r\n    (<div><HeroImage\r\n    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n    title={state.results[0].title}\r\n    text={state.results[0].overview}\r\n    />\r\n   \r\n    </div>\r\n    ):null} \r\n     <SearchBar setSearchTerm={setSearchTerm}/>\r\n    <Grid header={!searchTerm?'Filmes Populares':'Resultados da busca'}>\r\n        {state.results.map(movie=>(\r\n           <Thumb clickable key={movie.id} image={\r\n            movie.poster_path  \r\n            ? IMAGE_BASE_URL+POSTER_SIZE+movie.poster_path: noImage \r\n\r\n           } movieId={movie.id}\r\n           \r\n           />\r\n           \r\n           ))}\r\n\r\n    </Grid>\r\n \r\n{loading&&<Spinner/>}\r\n{state.page <state.total_pages && !loading &&(\r\n    <Button text='Carregar mais' callback={()=>setIsLoadingMore(true)}/>\r\n)}\r\n    </div>\r\n  )\r\n    ;\r\n}\r\nexport default Home;","import react, { useEffect, useState } from \"react\";\r\n//APi\r\nimport API,{Movie} from '../../API'\r\nimport { isPersistedState } from \"../../helpers\";\r\n\r\nexport const useHomeFetch=()=>{\r\n    const initialState={\r\n        page:0,\r\n        results:[] as Movie[],\r\n        total_pages:0,\r\n        total_results:0\r\n    }\r\n    const [searchTerm,setSearchTerm]=useState('');\r\nconst [state,setState] =useState(initialState);\r\nconst [loading,setLoading] =useState(false);\r\nconst [error,setError] = useState(false);\r\nconst [isLoadingMore,setIsLoadingMore] =useState(false);\r\n\r\nconst fetchMovies =async( page:number,searchTerm=\"\")=>{\r\n     try{\r\nsetError(false);\r\nsetLoading(true);\r\n\r\nconst movies =await API.fetchMovies(searchTerm,page);\r\nsetState(prev =>({\r\n\r\n    ...movies,\r\n    results:\r\n    page>1 ?[...prev.results,...movies.results]:[...movies.results]\r\n\r\n}))  \r\n}catch(error){\r\n         setError(true);\r\nalert(error);\r\n     }\r\n     setLoading(false);\r\n   \r\n }\r\n\r\n useEffect(()=>{\r\n   if(!searchTerm){\r\n       const sessionState=isPersistedState('homeState');\r\n  if(sessionState){\r\n      setState(sessionState);\r\n  }\r\n  \r\n    }\r\n    fetchMovies(1,searchTerm);\r\n    setState(initialState);\r\n     },[searchTerm])\r\n\r\n     useEffect(()=>{\r\n        if(!isLoadingMore){\r\n            return;\r\n        }\r\n        fetchMovies(state.page+1,searchTerm);\r\n        setIsLoadingMore(false);\r\n         },[isLoadingMore,searchTerm,state.page])\r\n \r\n useEffect(()=>{\r\nif(!searchTerm){\r\n    sessionStorage.setItem('homeState',JSON.stringify(state))\r\n}\r\n },[searchTerm,state])\r\n \r\n \r\n         return{state,loading,error,searchTerm,setSearchTerm,setIsLoadingMore};\r\n\r\n}","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle= createGlobalStyle`\r\n:root{\r\n    --maxWidth: 1280px;\r\n    --white:#FFF;\r\n    --lightGrey:#eee;\r\n    --medGrey:#353535;\r\n    --darkGrey:#1c1c1c;\r\n    --fontSuperBig:2.5rem;\r\n    --fontBig:1.5rem;\r\n    --fontMed:1.2rem;\r\n    --fontSmall:1rem;\r\n}\r\n*{\r\n    box-sizing:border-box;\r\n    font-family: 'Abel', sans-serif;\r\n}\r\nbody{\r\n    margin:0;\r\n}\r\nh1{\r\n    font-size:2rem;\r\n    font-weight: 600;\r\n    color:var(--white);\r\n}\r\nh3{\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n}\r\np{\r\n    font-size: 1rem;\r\n    color:var(--white);\r\n}\r\n\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nwidth: 100%;\r\nheight: 70px;\r\nbackground:var(--medGrey);\r\ncolor: var(--white);\r\n`;\r\n\r\nexport const Content =styled.div`\r\ndisplay: flex;\r\nwidth: 100%;\r\nmax-width: var(--maxWidth);\r\npadding: 0 20px;\r\n\r\nspan{\r\n    font-size: var(--fontMed);\r\n    color: var(--white);\r\n    padding-right: 10px;\r\n    @media screen and (max-width: 768px){\r\n        font-size: var(--fontSmall);\r\n    }\r\n}\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Wrapper,Content } from \"./BreadCrumb.styles\";\r\ntype Props={\r\n    movieTitle:string;\r\n}\r\n\r\nconst BreadCrumb:React.FC<Props>=({movieTitle})=>(\r\n<Wrapper>\r\n\r\n    <Content>\r\n<Link to='/'>\r\n \r\n<span>Home</span>\r\n</Link>\r\n<span>|</span>\r\n<span>{movieTitle}</span>\r\n    </Content>\r\n</Wrapper>\r\n\r\n\r\n\r\n);\r\nexport default BreadCrumb;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper =styled.div`\r\ncolor: var(--white);\r\nbackground: var(--darkGrey);\r\nborder-radius:20px;\r\ntext-align: center;\r\n\r\nh3{\r\n    margin:10px 0 0 0;\r\n\r\n}\r\n\r\np{\r\n    margin:5px 0;\r\n\r\n}\r\n`\r\n\r\nexport const Image = styled.img`\r\n\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 200px;\r\nobject-fit: cover;\r\nborder-radius: 15px;\r\n\r\n\r\n`","import { Wrapper,Image } from \"./Actor.styles\";\r\n\r\nimport React from \"react\";\r\ntype Props={\r\n    name:string;\r\n    character:string;\r\n    imageurl:string\r\n}\r\nconst Actor:React.FC<Props>=({name,character,imageurl})=>(\r\n<Wrapper>\r\n<Image src={imageurl} alt=\"actor-thumb\"/>\r\n<h3>{name}</h3>\r\n<p>{character}</p>\r\n</Wrapper>\r\n\r\n\r\n);\r\nexport default Actor;\r\n","import styled from 'styled-components';\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\r\ntype Props={\r\n  backdrop:string;\r\n}\r\nexport const Wrapper = styled.div<Props>`\r\n  background: ${({ backdrop }) =>\r\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : '#000'};\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieInfo 1s;\r\n\r\n  @keyframes animateMovieInfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  border-radius: 20px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 40px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n\r\n  .rating-directors {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 50%;\r\n    margin: 0;\r\n  }\r\n\r\n  .director {\r\n    margin: 0 0 0 40px;\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\n// Components\r\nimport Thumb from '../Thumb';\r\n// Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n// Image\r\nimport NoImage from '../../images/no_image.jpg';\r\n// Styles\r\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\r\n// Types\r\nimport { MovieState } from '../hooks/useMovieFetch';\r\ntype Props={\r\n  movie:MovieState;\r\n}\r\nconst MovieInfo:React.FC<Props> = ({ movie }) => (\r\n  <Wrapper backdrop={movie.backdrop_path}>\r\n    <Content>\r\n      <Thumb\r\n      \r\n        image={\r\n          movie.poster_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n            : NoImage\r\n        }\r\n        clickable={false}\r\n      />\r\n      <Text>\r\n        <h1>{movie.title}</h1>\r\n        <h3>Descrição</h3>\r\n        <p>{movie.overview}</p>\r\n\r\n        <div className='rating-directors'>\r\n          <div>\r\n            <h3>Classificação</h3>\r\n            <div className='score'>{movie.vote_average}</div>\r\n          </div>\r\n          <div className='director'>\r\n            <h3>Diretor{movie.directors.length>1?<span>es(as)</span>:<span>(a)</span>}</h3>\r\n            {movie.directors.map(director => (\r\n              <p key={director.credit_id}>{director.name}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\n\r\nexport default MovieInfo;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n\r\n  .column {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: var(--medGrey);\r\n    border-radius: 20px;\r\n    margin: 0 20px;\r\n    flex: 1;\r\n\r\n    :first-child {\r\n      margin-left: 0;\r\n    }\r\n\r\n    :last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n\r\n    .column {\r\n      margin: 20px 0;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport {calcTime,convertMoney} from '../../helpers';\r\n\r\n\r\nimport { Wrapper,Content } from \"./MovieInfoBar.styles\";\r\ntype Props={\r\n    time:number;\r\n    budget:number;\r\n    revenue:number;\r\n}\r\nconst MovieInfoBar:React.FC<Props> =({time,budget,revenue})=>(\r\n\r\n<Wrapper>\r\n<Content>\r\n<div className=\"column\">\r\n    <p>Duração:{calcTime(time)}</p>\r\n</div>\r\n<div className=\"column\">\r\n    <p>Orçamento:{convertMoney(budget)}</p>\r\n</div>\r\n<div className=\"column\">\r\n    <p>Receita:{convertMoney(revenue)}</p>\r\n</div>\r\n\r\n\r\n</Content>\r\n</Wrapper>\r\n\r\n);\r\nexport default MovieInfoBar;","import React from \"react\";\r\nimport { IMAGE_BASE_URL,POSTER_SIZE } from \"../config\";\r\n\r\nimport Grid from \"./Grid\";\r\nimport Spinner from \"./Spinner\";\r\nimport BreadCrumb from './BreadCrumb'\r\nimport Actor from \"./Actor\";\r\n\r\nimport {useMovieFetch} from './hooks/useMovieFetch'\r\nimport NoImage from '../images/no_image.jpg'\r\nimport { useParams } from \"react-router\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport MovieInfoBar from \"./MovieInfoBar\";\r\nfunction Movie() {\r\nconst {movieId} = useParams();\r\n\r\nconst{state:movie,loading,error} =useMovieFetch(Number(movieId));\r\n\r\nif(loading){\r\n    return(<Spinner/>);\r\n}\r\nif(error){\r\n\r\n    <div>Alguma coisa deu errado...</div>\r\n}\r\nreturn(\r\n<div>\r\n<BreadCrumb movieTitle={movie.title}/>\r\n<MovieInfo movie={movie}/>\r\n<MovieInfoBar \r\ntime={movie.runtime} \r\nbudget={movie.budget} \r\n revenue={movie.revenue}></MovieInfoBar>\r\n <Grid header='Atores'>\r\n{movie.actors.map(actor=>\r\n    <Actor key={actor.credit_id} name={actor.name} character={actor.character}\r\n    imageurl={\r\n        actor.profile_path? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n        :NoImage\r\n    }\r\n \r\n    />\r\n\r\n    )}\r\n\r\n </Grid>\r\n</div>\r\n);\r\n}\r\nexport default Movie;","\r\nimport { useState,useEffect } from \"react\";\r\n\r\nimport API,{Movie,Cast,Crew} from '../../API'\r\nimport { isPersistedState } from \"../../helpers\";\r\n\r\nexport type MovieState=Movie&{actors:Cast[];directors:Crew[]}\r\n\r\nexport function useMovieFetch (movieId:number){\r\n\r\n    const[state,setState]=useState<MovieState>({} as MovieState);\r\n    const [loading,setLoading] =useState(true);\r\n    const [error,setError] =useState(false);\r\nuseEffect(()=>{\r\nconst fetchMovie =async() =>{\r\n\r\n    try{\r\n\r\nsetLoading(true);\r\nsetError(false);\r\nconst movie = await API.fetchMovie(movieId);\r\nconst credits =await API.fetchCredits(movieId);\r\n\r\nconst director = credits.crew.filter(\r\n\r\n    member=> member.job ==='Director'\r\n );\r\nsetState({\r\n    ...movie,\r\n    actors:credits.cast,\r\n    directors:director\r\n});\r\nsetLoading(false)\r\n\r\n    }catch(e){\r\n        setError(true);\r\n    }\r\n}\r\nconst sessionState =isPersistedState(movieId.toString());\r\nif(sessionState){\r\n    setState(sessionState);\r\n    setLoading(false);\r\n    return;\r\n}\r\nfetchMovie();\r\n},[movieId]);\r\n\r\nuseEffect(()=>{\r\nsessionStorage.setItem(movieId.toString(),JSON.stringify(state))\r\n},[movieId,state]);\r\n\r\n\r\nreturn{state, loading,error}\r\n}","\r\nimport React from \"react\";\r\n\r\ntype Props={\r\n\r\n}\r\nconst NotFound:React.FC=()=> <div>Not found</div>;\r\n\r\nexport default NotFound;","import React from 'react';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport {GlobalStyle} from './GlobalStyle'\nimport{BrowserRouter,Routes,Route} from 'react-router-dom' \nimport Movie from './components/Movie';\nimport  NotFound from './components/NotFound';\n\nconst App :React.FC=()=>{\n  return (\n    \n    <BrowserRouter  basename=\"/tmdb-app\">\n        <GlobalStyle/>\n  <Header/>\n  <Routes>\n    <Route path='/' element={<Home/>}/>\n    <Route path='/:movieId' element={<Movie/>}/>\n    <Route path='/*' element={<NotFound/>}/>\n  \n  </Routes>\n \n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}